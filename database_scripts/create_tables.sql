-- Dropar a tabela usuarios se existir (ignora erro se não existir)
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE usuarios CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

-- Criar a tabela usuarios
CREATE TABLE usuarios (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nome VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) NOT NULL UNIQUE,
    senha_hashed VARCHAR2(255) NOT NULL, -- Adicionando a coluna senha_hashed
    nivel NUMBER DEFAULT 1 NOT NULL,
    pontos NUMBER DEFAULT 0 NOT NULL
);

-- Dropar a tabela alertas se existir (ignora erro se não existir)
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE alertas CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

-- Criar a tabela alertas
CREATE TABLE alertas (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    titulo VARCHAR2(100) NOT NULL,
    tipo VARCHAR2(100), -- Adicionando a coluna tipo
    descricao VARCHAR2(500) NOT NULL,
    latitude NUMBER NOT NULL,
    longitude NUMBER NOT NULL,
    data_ocorrencia TIMESTAMP WITH TIME ZONE NOT NULL,
    status VARCHAR2(50) DEFAULT 'Aberto' NOT NULL,
    usuario_id NUMBER NOT NULL,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
);

-- Dropar a tabela regioes se existir (ignora erro se não existir)
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE regioes CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

-- Criar a tabela regioes
CREATE TABLE regioes (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nome VARCHAR2(100) NOT NULL UNIQUE
);

-- Tabela de associação entre Alertas e Regiões (Muitos-para-Muitos)
-- Dropar a tabela alerta_regiao se existir (ignora erro se não existir)
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE alerta_regiao CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

CREATE TABLE alerta_regiao (
    alerta_id NUMBER NOT NULL,
    regiao_id NUMBER NOT NULL,
    PRIMARY KEY (alerta_id, regiao_id),
    FOREIGN KEY (alerta_id) REFERENCES alertas(id) ON DELETE CASCADE,
    FOREIGN KEY (regiao_id) REFERENCES regioes(id) ON DELETE CASCADE
);

-- Dropar a tabela conquistas se existir (ignora erro se não existir)
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE conquistas CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

-- Criar a tabela conquistas
CREATE TABLE conquistas (
    id NUMBER PRIMARY KEY,
    nome VARCHAR2(100) NOT NULL,
    descricao VARCHAR2(255) NOT NULL,
    icone VARCHAR2(50),
    cor VARCHAR2(20),
    pontos_necessarios NUMBER DEFAULT 0 NOT NULL
);

-- Tabela de associação entre Usuarios e Conquistas (Muitos-para-Muitos)
-- Dropar a tabela usuario_conquista se existir (ignora erro se não existir)
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE usuario_conquista CASCADE CONSTRAINTS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

CREATE TABLE usuario_conquista (
    usuario_id NUMBER NOT NULL,
    conquista_id NUMBER NOT NULL,
    data_conquista TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY (usuario_id, conquista_id),
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE,
    FOREIGN KEY (conquista_id) REFERENCES conquistas(id) ON DELETE CASCADE
); 